{"version":3,"file":"static/js/700.8e1758f7.chunk.js","mappings":"+PAIaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAiBD,EAAAA,GAAAA,IAAH,uFAMdE,EAAcF,EAAAA,GAAAA,IAAH,iEAMXG,EAAaH,EAAAA,GAAAA,GAAH,uDAKVI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2H,SC0CvB,EAtDqB,WAAO,IAAD,IACzB,GAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAM3D,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAASU,MAAK,SAAAC,GAAI,OAAIZ,EAASY,EAAb,GACnC,GAAE,CAACX,KAGF,UAACV,EAAD,YACE,SAACK,EAAD,CAAYiB,GAAIR,EAAoBS,QAApC,qBAEkB,IAAjBf,EAAMgB,SACL,UAACtB,EAAD,YACE,gBACEuB,IAAG,yCAAoCjB,EAAMkB,aAC7CC,IAAKnB,EAAMoB,MACXC,MAAO,OAET,UAAC1B,EAAD,YACE,0BACGK,EAAMoB,MADT,KACkBpB,EAAMsB,aAAaC,MAAM,EAAG,GAD9C,QAGA,wCAAgBC,KAAKC,MAA4B,IAArBzB,EAAM0B,aAAsB,IAAxD,QACA,sCACA,uBAAI1B,EAAM2B,YACV,oCACA,SAAC/B,EAAD,UACGI,EAAM4B,OAAOC,KAAI,SAAAC,GAChB,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,aAKT,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMlB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAmB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,+LC/DKC,EAAW,gCACXC,EAAU,mCAEVC,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHvB,cAEfG,EAFe,yBAKdA,EAAS1B,KAAK2B,SALA,gCAOrBC,QAAQC,IAAI,KAAMC,SAPG,yDAAH,qDAWhBhC,EAAe,mCAAG,WAAMT,GAAN,gGAEGoC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDjC,EADC,oBACkBkC,IAHrB,cAEdG,EAFc,yBAKbA,EAAS1B,MALI,gCAOpB4B,QAAQC,IAAI,KAAMC,SAPE,yDAAH,sDAWfC,EAAY,mCAAG,WAAM1C,GAAN,gGAEMoC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDjC,EADC,4BAC0BkC,IAHhC,cAEXG,EAFW,yBAKVA,EAAS1B,MALC,gCAOjBgC,MAAM,KAAMF,SAPK,yDAAH,sDAWZG,EAAe,mCAAG,WAAM5C,GAAN,gGAEGoC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDjC,EADC,4BAC0BkC,IAH7B,cAEdG,EAFc,yBAKbA,EAAS1B,KAAK2B,SALD,gCAOpBK,MAAM,KAAMF,SAPQ,yDAAH,sDAWfI,EAAe,mCAAG,WAAMC,GAAN,gGAEGV,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CY,EAD9C,gCAFH,cAEdT,EAFc,yBAKbA,EAAS1B,MALI,gCAOpBgC,MAAM,KAAMF,SAPQ,yDAAH,qD","sources":["Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","settings/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 30px;\n`;\n\nexport const ContainerMovie = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n  margin-top: 30px;\n`;\n\nexport const Description = styled.div`\n  margin-left: 30px;\n\n  width: 400px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  padding: 10px 20px;\n  border: 1px solid #000;\n  border-radius: 5px;\n\n  margin-bottom: 10px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n\nimport { getMovieDetails } from 'settings/getMovies';\n\nimport {\n  Container,\n  ContainerMovie,\n  Description,\n  GenresList,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinklocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => setMovie(data));\n  }, [movieId]);\n\n  return (\n    <Container>\n      <StyledLink to={backLinklocationRef.current}>Go back</StyledLink>\n\n      {movie.length !== 0 && (\n        <ContainerMovie>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.title}\n            width={300}\n          />\n          <Description>\n            <h2>\n              {movie.title} ({movie.release_date.slice(0, 4)})\n            </h2>\n            <p>User Score: {Math.round((movie.vote_average * 100) / 10)}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <GenresList>\n              {movie.genres.map(genre => {\n                return <li key={genre.id}>{genre.name}</li>;\n              })}\n            </GenresList>\n          </Description>\n        </ContainerMovie>\n      )}\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd830553544ab88a00e6845a92b10c528';\n\nconst getTrendigMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nconst getSearchMovies = async value => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport {\n  getTrendigMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  getSearchMovies,\n};\n"],"names":["Container","styled","ContainerMovie","Description","GenresList","StyledLink","NavLink","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinklocationRef","useRef","state","from","useEffect","getMovieDetails","then","data","to","current","length","src","poster_path","alt","title","width","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","BASE_URL","API_KEY","getTrendigMovies","axios","response","results","console","log","message","getMovieCast","alert","getMovieReviews","getSearchMovies","value"],"sourceRoot":""}