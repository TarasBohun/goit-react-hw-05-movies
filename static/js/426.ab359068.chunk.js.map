{"version":3,"file":"static/js/426.ab359068.chunk.js","mappings":"2PAEaA,EAAkBC,EAAAA,GAAAA,IAAH,6KAcfC,EAAOD,EAAAA,GAAAA,GAAH,+HASJE,EAAOF,EAAAA,GAAAA,GAAH,iH,SCuDjB,EAxEe,WAAO,IAAD,EACnB,GAAoCG,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAsBjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAAOM,MAAK,SAAAC,GAAI,OAAIX,EAAgBW,EAApB,GACjC,GAAE,CAACP,KAGF,UAACZ,EAAD,YACE,kBAAMoB,SAtBW,SAAAC,GAInB,GAHAA,EAAEC,kBACFL,EAAAA,EAAAA,IAAgBZ,GAAYa,MAAK,SAAAC,GAAI,OAAIX,EAAgBW,EAApB,IAElB,KAAfd,EACF,OAAOM,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOP,GAC1B,EAcG,WACE,kBACEkB,KAAK,OACLC,YAAY,gBACZC,aAAa,MACbC,WAAS,EACTC,MAAOtB,EACPuB,SAnBkB,SAAAP,GACxB,IAAMQ,EAAaR,EAAES,OAAOH,MAE5BrB,EAAcuB,EACf,KAiBK,mBAAQN,KAAK,SAAb,gDAEF,SAACrB,EAAD,UACGK,GACCA,EAAawB,QAAQC,KAAI,SAAAC,GAEvB,OACE,SAAC9B,EAAD,WACE,UAAC,KAAD,CAAM+B,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAxC,UACGmB,EAAMK,aACL,gBACEC,IAAG,yCAAoCN,EAAMK,aAC7CE,IAAKP,EAAMQ,MACXC,MAAO,IACPC,OAAQ,OAGV,gBACEJ,IAAG,6EACHC,IAAKP,EAAMQ,MACXC,MAAO,IACPC,OAAQ,OAGZ,uBAAIV,EAAMQ,YAjBHR,EAAME,GAqBpB,QAIV,C,+LC5EKS,EAAW,gCACXC,EAAU,mCAEVC,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHvB,cAEfG,EAFe,yBAKdA,EAAS7B,KAAKY,SALA,gCAOrBkB,QAAQC,IAAI,KAAMC,SAPG,yDAAH,qDAWhBC,EAAe,mCAAG,WAAMC,GAAN,gGAEGN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,oBACkBR,IAHrB,cAEdG,EAFc,yBAKbA,EAAS7B,MALI,gCAOpB8B,QAAQC,IAAI,KAAMC,SAPE,yDAAH,sDAWfG,EAAY,mCAAG,WAAMD,GAAN,gGAEMN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC0BR,IAHhC,cAEXG,EAFW,yBAKVA,EAAS7B,MALC,gCAOjBoC,MAAM,KAAMJ,SAPK,yDAAH,sDAWZK,EAAe,mCAAG,WAAMH,GAAN,gGAEGN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC0BR,IAH7B,cAEdG,EAFc,yBAKbA,EAAS7B,KAAKY,SALD,gCAOpBwB,MAAM,KAAMJ,SAPQ,yDAAH,sDAWflC,EAAe,mCAAG,WAAMU,GAAN,gGAEGoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8ClB,EAD9C,gCAFH,cAEdqB,EAFc,yBAKbA,EAAS7B,MALI,gCAOpBoC,MAAM,KAAMJ,SAPQ,yDAAH,qD","sources":["Pages/Movies/Movies.styled.jsx","Pages/Movies/Movies.jsx","settings/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerMovies = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  margin-top: 10px;\n  /* text-align: center; */\n`;\n\n// export const BtnInput = styled.button`\n//   background-color: #fff;\n// `;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 200px;\n  background-color: #f2e4d2;\n  border-radius: 5px;\n\n  padding: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from 'settings/getMovies';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ContainerMovies, List, Item } from './Movies.styled';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getSearchMovies(inputValue).then(data => setSearchMovies(data));\n\n    if (inputValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: inputValue });\n  };\n\n  const updateQueryString = e => {\n    const queryValue = e.target.value;\n\n    setInputValue(queryValue);\n  };\n\n  useEffect(() => {\n    getSearchMovies(query).then(data => setSearchMovies(data));\n  }, [query]);\n\n  return (\n    <ContainerMovies>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n          value={inputValue}\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">Пошук</button>\n      </form>\n      <List>\n        {searchMovies &&\n          searchMovies.results.map(movie => {\n            // console.log(movie);\n            return (\n              <Item key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                      alt={movie.title}\n                      width={200}\n                      height={300}\n                    />\n                  ) : (\n                    <img\n                      src={`http://tinleychamber.org/wp-content/uploads/2019/01/no-image-available.png`}\n                      alt={movie.title}\n                      width={200}\n                      height={300}\n                    />\n                  )}\n                  <p>{movie.title}</p>\n                </Link>\n              </Item>\n            );\n          })}\n      </List>\n    </ContainerMovies>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd830553544ab88a00e6845a92b10c528';\n\nconst getTrendigMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nconst getSearchMovies = async value => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport {\n  getTrendigMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  getSearchMovies,\n};\n"],"names":["ContainerMovies","styled","List","Item","useState","inputValue","setInputValue","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getSearchMovies","then","data","onSubmit","e","preventDefault","type","placeholder","autoComplete","autoFocus","value","onChange","queryValue","target","results","map","movie","to","id","state","from","poster_path","src","alt","title","width","height","BASE_URL","API_KEY","getTrendigMovies","axios","response","console","log","message","getMovieDetails","movieId","getMovieCast","alert","getMovieReviews"],"sourceRoot":""}